version: '3.8'

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2025-01-20T14-49-07Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: JABA_SUPER_USER_MINIO
    MINIO_ROOT_PASSWORD: jaba127!368601NO
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5
services:
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "first"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
    volumes:
      - ./init_scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres

#mvn clean install && docker compose down -v && docker compose build && docker compose up